#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 15em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}

.logo:hover {
  filter: drop-shadow(0 0 2em #d1df3895);
}

.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Styles specific to the SearchBar component */
.search-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* margin: 20px 0;
  padding: 0 10px; */
}

.search-input {
  font-size: 16px;
  padding: 10px;
  width: 100%;
  max-width: 300px;
  margin: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.input-container {
  display: flex;
  align-items: center;
  gap: 10px;
}

.search-button,
.clear-button {
  padding: 10px 20px;
  cursor: pointer;
}

.checked-in {
  padding: 10px 20px;
  cursor: not-allowed;
  color: unset;
  border: none; /* Ensure no border is shown */
}

.checked-in:hover {
  border: none; /* Prevent border on hover */
  box-shadow: none; /* Prevent any shadow effects on hover */
  background-color: none; /* Optional: keep background consistent */
}
.check-in-button {
  padding: 10px 20px;
  /* max-width: 100%; */
}

/* Keep the space reserved for the table */
.results-container {
  min-height: 250px;
  width: 100%;
  max-width: 800px;
  margin: 20px auto;
}

/* Table container ensures no overflow */
.table-container {
  width: 100%;
  overflow: clip; /* Prevent horizontal scrolling */
}

/* Set table-layout to fixed for responsive behavior */
.table {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  border-collapse: collapse;
  table-layout: fixed; /* Columns will resize to fit */
}

.table th,
.table td {
  padding: 10px;
  text-align: center;
  border: 1px solid #ccc;
  word-wrap: break-word; /* Prevent text overflow */
}

.no-results {
  margin-top: 20px;
  color: #888;
}

/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
@media only screen and (max-width: 760px),
  (min-device-width: 768px) and (max-device-width: 1024px) {
  /* Force table to not be like tables anymore */
  table,
  thead,
  tbody,
  th,
  td,
  tr {
    display: block;
  }

  /* Hide table headers (but not display: none;, for accessibility) */
  thead tr {
    position: absolute;
    top: -9999px;
    left: -9999px;
  }

  tr {
    margin: 0 0 1rem 0;
  }

  tr:nth-child(odd) {
    background: #3d3b18d4;
  }

  td {
    /* Behave  like a "row" */
    border: none;
    border-bottom: 1px solid #eee;
    position: relative;
    padding-left: 50%;
  }

  td::before {
    /* Now like a table header */
    position: absolute;
    left: 6px;
    width: 45%;
    padding-right: 10px;
    white-space: nowrap;
    top: 50%; /* Position from the top */
    transform: translateY(-50%); /* Vertically center the text */
  }

  /*
		Label the data
    You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
		*/
  td:nth-of-type(1)::before {
    content: "Donor:";
    text-align: left;
  }
  td:nth-of-type(2)::before {
    content: "Ticket Number:";
    text-align: left;
  }
  td:nth-of-type(3)::before {
    content: "Reference:";
    text-align: left;
  }
  td:nth-of-type(4)::before {
    content: "Ticket Type:";
    text-align: left;
  }
  td:nth-of-type(5)::before {
    content: "Remaining Guests:";
    text-align: left;
  }
  td:nth-of-type(6)::before {
    content: "Actions:";
    text-align: left;
  }
}
